// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoolingV2.EntityFramework;

namespace PoolingV2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181002181629_Initial migration")]
    partial class Initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PoolingV2.Models.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("DateIssued");

                    b.Property<string>("Description");

                    b.Property<int>("FreelancerId");

                    b.HasKey("CertificationId");

                    b.HasIndex("FreelancerId");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("PoolingV2.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course");

                    b.Property<int>("FreelancerId");

                    b.Property<DateTime>("FromDate");

                    b.Property<string>("SchoolName");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("EducationId");

                    b.HasIndex("FreelancerId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("PoolingV2.Models.Freelancer", b =>
                {
                    b.Property<int>("FreelancerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber");

                    b.Property<string>("Country");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("IsVerified");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleInitial");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Photo");

                    b.Property<string>("Title");

                    b.HasKey("FreelancerId");

                    b.ToTable("Freelancer");
                });

            modelBuilder.Entity("PoolingV2.Models.FreelancerSkills", b =>
                {
                    b.Property<int>("FreelancerSkillsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FreelancerId");

                    b.Property<int>("SkillId");

                    b.HasKey("FreelancerSkillsId");

                    b.HasIndex("FreelancerId");

                    b.HasIndex("SkillId");

                    b.ToTable("FreelancerSkills");
                });

            modelBuilder.Entity("PoolingV2.Models.Skill_Pooling", b =>
                {
                    b.Property<int>("Skill_PoolingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SkillTypeId");

                    b.HasKey("Skill_PoolingId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("Skill_Pooling");
                });

            modelBuilder.Entity("PoolingV2.Models.SkillType", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillTypeName");

                    b.HasKey("SkillTypeId");

                    b.ToTable("SkillType");
                });

            modelBuilder.Entity("PoolingV2.Models.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<int>("FreelancerId");

                    b.Property<DateTime>("FromDate");

                    b.Property<string>("Position");

                    b.Property<DateTime>("ToDate");

                    b.Property<string>("WorkDescription");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("FreelancerId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("PoolingV2.Models.Certification", b =>
                {
                    b.HasOne("PoolingV2.Models.Freelancer", "UseFreelancerr")
                        .WithMany("Certificates")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoolingV2.Models.Education", b =>
                {
                    b.HasOne("PoolingV2.Models.Freelancer", "Freelancer")
                        .WithMany("Educations")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoolingV2.Models.FreelancerSkills", b =>
                {
                    b.HasOne("PoolingV2.Models.Freelancer", "Freelancer")
                        .WithMany("FreelancerSkills")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PoolingV2.Models.Skill_Pooling", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoolingV2.Models.Skill_Pooling", b =>
                {
                    b.HasOne("PoolingV2.Models.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoolingV2.Models.WorkExperience", b =>
                {
                    b.HasOne("PoolingV2.Models.Freelancer", "Freelancer")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
